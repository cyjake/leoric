name: Node CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      # https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml
      postgres:
        image: postgres:11.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD:
          POSTGRES_DB: leoric
        ports:
        # will assign a random free host port
        - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      # https://github.community/t5/GitHub-Actions/github-actions-cannot-connect-to-mysql-service/td-p/30611#
      # mysql:latest doesn't work out of the box yet (https://github.com/mysqljs/mysql/issues/2046)
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: leoric
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install PostgreSQL client & SQLite
      run: |
        sudo apt-get install -y postgresql-client sqlite3 libsqlite3-dev
    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm test
      env:
        CI: true
        # use localhost for the host here because we are running the job on the VM.
        # If we were running the job on in a container this would be postgres
        POSTGRES_HOST: localhost
        POSTGRES_USER: postgres
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
        MYSQL_PORT: ${{ job.services.mysql.ports['3306'] }}
        MYSQL_ROOT_PASSWORD: password
